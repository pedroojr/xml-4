name: Deploy Backend

on:
  push:
    branches: [ main ]
    paths:
      - 'server/**'
      - '.github/workflows/deploy-backend.yml'

jobs:
  deploy:
    runs-on: ubuntu-latest
    env:
      REMOTE_API_PATH: /var/www/api
      API_DOMAIN: ${{ secrets.API_DOMAIN }}
      CERTBOT_EMAIL: ${{ secrets.CERTBOT_EMAIL }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Zip server folder
        run: zip -r server.zip server -x "server/node_modules/*"

      - name: Upload server.zip via SCP
        uses: appleboy/scp-action@v0.1.7
        with:
          host: ${{ secrets.SFTP_HOST }}
          username: ${{ secrets.SFTP_USERNAME }}
          password: ${{ secrets.SFTP_PASSWORD }}
          port: ${{ secrets.SFTP_PORT }}
          source: server.zip
          target: ${{ env.REMOTE_API_PATH }}/

      - name: Remote deploy over SSH
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.SFTP_HOST }}
          username: root
          password: ${{ secrets.SFTP_PASSWORD }}
          port: ${{ secrets.SFTP_PORT }}
          script: |
            cd ${{ env.REMOTE_API_PATH }}
            unzip -o server.zip
            cd server
            npm ci --omit=dev || npm install --omit=dev
            pm2 describe xml-importer-api || pm2 start server-production.js --name xml-importer-api
            pm2 restart xml-importer-api
            pm2 save
            
            # --- HTTPS reverse proxy via Nginx ---
            if [ -n "${API_DOMAIN}" ]; then
              apt-get update -y && apt-get install -y nginx certbot python3-certbot-nginx || true
              cfg="/etc/nginx/sites-available/${API_DOMAIN}"
              echo "server {"                                   >  "$cfg"
              echo "    listen 80;"                              >> "$cfg"
              echo "    server_name ${API_DOMAIN};"              >> "$cfg"
              echo "    location /api/ {"                        >> "$cfg"
              echo "        proxy_pass http://127.0.0.1:3001/;" >> "$cfg"
              echo "        proxy_set_header Host \$host;"      >> "$cfg"
              echo "        proxy_set_header X-Real-IP \$remote_addr;" >> "$cfg"
              echo "        proxy_set_header X-Forwarded-For \$proxy_add_x_forwarded_for;" >> "$cfg"
              echo "        proxy_set_header X-Forwarded-Proto \$scheme;" >> "$cfg"
              echo "    }"                                        >> "$cfg"
              echo "    location / {"                            >> "$cfg"
              echo "        return 200 'xml importer backend online';" >> "$cfg"
              echo "    }"                                        >> "$cfg"
              echo "}"                                            >> "$cfg"
              ln -sfn "$cfg" "/etc/nginx/sites-enabled/${API_DOMAIN}"
              nginx -t && systemctl reload nginx || systemctl restart nginx || true
              if [ -n "${CERTBOT_EMAIL}" ]; then
                certbot --nginx -d ${API_DOMAIN} --non-interactive --agree-tos -m ${CERTBOT_EMAIL} --redirect || true
                nginx -t && systemctl reload nginx || true
              fi
            fi
